
	processor 6502
        include "vcs.h"
        include "macro.h"
        include "xmacro.h"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Start an uninitialized segment at $80 for var declaration.
;; We have memory from $80 to $FF to work with, minus a few at
;; the end if we use the stack.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	seg.u Variables
        org $80
P0Height equ 9 ; seria lo mismo que .byte 
P1Height equ 9   
P0PosY	byte
P1PosY	byte


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Start our ROM code segment starting at $F000.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	seg Code
	org $f000

reset:
	CLEAN_START
        
        ldx #$80		
	stx COLUBK
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Initialize variables
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	lda #10
        sta P0PosY
        sta P1PosY
	
        lda #9
        sta P0Height
        sta P1Height
        
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Start a new frame by configuring VBLANK and VSYNC
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        
NextFrame
        lda #02
	sta VBLANK
	sta VSYNC
		
	REPEAT 3
		sta WSYNC 		; 3 time WSYNC
	REPEND
	
	lda #0
	sta VSYNC
	
	REPEAT 37		; 37 Vblank
		sta WSYNC
	REPEND
	
        lda #0
	sta VBLANK
        
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Start 192 lines visibles
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	 ldx #192
gameLoop:

	txa
        sec
        sbc P0PosY
        sbc P1PosY
        cmp #P0Height
        cmp #P1Height
        bcc P0Bitmap
        lda #0
       	
P0Bitmap:
	tay
        lda P0bmp,Y
        sta GRP0
        sta GRP1
        lda P0Color,Y        
	sta COLUP0
        lda P1Color,Y
        sta COLUP1
        sta WSYNC
        dex
        bne gameLoop
        
        lda #0
        sta GRP0
        sta GRP1

        
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Lookup table for the player graphics bitmap
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	lda #2				
	sta VBLANK
	
        REPEAT 30
	sta WSYNC
	REPEND
        
        jmp NextFrame

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Lookup table for the player graphics bitmap
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
P0bmp:
        .byte %00000000
        .byte %00001000
        .byte %00011100
        .byte %00001000
        .byte %00001000
        .byte %00011100
        .byte %00111110
        .byte %01111111
        .byte %00101010
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Lookup table for the player colors
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
P0Color:
    	byte #$00
    	byte #$40
    	byte #$40
    	byte #$40
    	byte #$40
    	byte #$42
    	byte #$42
    	byte #$44
    	byte #$d2
        
P1Color:
    	byte #$00
    	byte #$80
    	byte #$80
    	byte #$80
    	byte #$80
    	byte #$82
    	byte #$82
    	byte #$84
    	byte #$82
	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Epilogue

	org $fffc
        .long reset	; reset vector
