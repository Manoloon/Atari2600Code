	; clean memory programm
	processor 6502 ;tell the processor we use
	
	seg code 	; start the code
	org $F000	; define the code origin at $F000

Start:
	lda #$a		; Load the A register with the hexadecimal value $A
	ldx #%1010	; Load the X register with the binary value %1010
	sta $80		; Store the value in the A register into (zero page) memory address $80
	stx $81		; Store the value in the X register into (zero page) memory address $81
	lda #10		; Load A with the decimal value 10

	clc		; antes de a√±adir nada , tengo que hacer clear el carry.
	adc $80		; Add to A the value inside RAM address $80
	adc $81		; Add to A the value inside RAM address $81
			; A should contain (#10 + $A + %1010) = #30 (or $1E in hexadecimal)              
	sta $82		; Store the value of A into RAM position $82
	jmp Start


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; fill the ROM size to exactly 4kb
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	org $FFFC
	.word Start	; reset vector at $FFFC (where the program starts)
	.word Start 	; this is the interrupt vector at $FFFE (unused in the VCS , no use interrupts)
